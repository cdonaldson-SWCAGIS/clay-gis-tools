# SWCA GIS Tools - Project Intelligence

## Project Patterns

### Code Style
- Use Python type hints for function parameters and return values
- Include docstrings for all functions and classes
- Follow PEP 8 style guidelines
- Use descriptive variable and function names

### Error Handling
- Use try/except blocks around external API calls
- Provide specific error messages for different failure scenarios
- Log errors with context information
- Handle missing resources gracefully

### Logging
- Currently using print statements for logging
- Future implementation should use structured logging
- Include timestamp, severity, and context in log messages
- Consider using the rich library for formatted console output

## Implementation Paths

### Authentication Flow
1. Create GIS object with credentials
2. Validate connection before performing operations
3. Handle authentication failures gracefully

### Web Map Update Flow
1. Retrieve web map by item ID
2. Extract web map JSON data
3. Recursively process operational layers
4. Identify layers containing target field
5. Update definition expressions
6. Save changes back to web map (if not in debug mode)

## User Preferences

### Debug Mode
- Debug mode is enabled by default (DEBUG_MODE = True)
- This simulates operations without making actual changes
- Set to False for production use

### Documentation
- Include example usage in comments
- Document function parameters and return values
- Explain complex operations with comments

## Known Challenges

### Security
- Credentials are currently hardcoded
- Need to implement secure credential management
- Consider environment variables or credential manager

### Performance
- Recursive operations on complex layer structures may be resource-intensive
- Network latency can affect performance
- Consider optimizations for large web maps

## Tool Usage Patterns

### patch_webmap_filters.py
- Used to update definition expressions in web maps
- Requires web map item ID, target field, and new filter
- Example usage:
  ```python
  webmap_item_id = "3d7ba61233c744b997c9e275e8475254"
  target_field = "project_number"
  new_filter = "project_number = '123456'"
  updated = update_webmap_definition_by_field(webmap_item_id, target_field, new_filter)
  ```

## Project Evolution

### Current Phase
- Early development with one functional utility
- Focus on establishing patterns and architecture
- Debug mode enabled for testing

### Next Phase
- Implement security enhancements
- Add command-line interface
- Implement structured logging
- Add unit tests
